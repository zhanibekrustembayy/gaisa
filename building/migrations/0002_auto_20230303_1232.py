# Generated by Django 3.2.5 on 2023-03-03 06:32

from django.contrib.auth.models import User
from django.contrib.auth.models import Group

from django.db import migrations

from datetime import datetime, timedelta
import time

def initialization(apps, schema_editor):

    # Суперпользователь id=1
    user = User.objects.create_superuser(username='root',
    email='shop260222@mail.ru',
    password='SsNn5678+-@')
    print("Суперпользователь создан")
    
    # Группа менеджеров
    managers = Group.objects.get_or_create(name = 'Managers')
    managers = Group.objects.get(name='Managers')
    print("Группа менеджеров создана")
    
    # Пользователь с ролью менеджера id=2
    user = User.objects.create_user(username='manager', password='Ss0066+-')
    managers.user_set.add(user)
    print("Менеджер добавлен в группу менеджеров")

    # Простые пользователи id=3...27 
    user = User.objects.create_user(username='user1', password='Uu0066+-', email='user1@mail.ru', first_name='Дина', last_name='Мусина')
    user = User.objects.create_user(username='user2', password='Uu0066+-', email='user2@mail.ru', first_name='Адия', last_name='Жунусова')
    user = User.objects.create_user(username='user3', password='Uu0066+-', email='user3@mail.ru', first_name='Айнура', last_name='Кенина')
    user = User.objects.create_user(username='user4', password='Uu0066+-', email='user4@mail.ru', first_name='Рустем', last_name='Какимов')
    user = User.objects.create_user(username='user5', password='Uu0066+-', email='user5@mail.ru', first_name='Алишер', last_name='Кабдуалиев')
    user = User.objects.create_user(username='user6', password='Uu0066+-', email='user6@mail.ru', first_name='Бауржан', last_name='Арыкбаев')
    user = User.objects.create_user(username='user7', password='Uu0066+-', email='user7@mail.ru', first_name='Алишер', last_name='Танатаров')
    user = User.objects.create_user(username='user8', password='Uu0066+-', email='user8@mail.ru', first_name='Мерует', last_name='Искакова')
    user = User.objects.create_user(username='user9', password='Uu0066+-', email='user9@mail.ru', first_name='Ольга', last_name='Муравьева')
    user = User.objects.create_user(username='user10', password='Uu0066+-', email='user10@mail.ru', first_name='Ақжарқын', last_name='Сансызбаева')
    print("Созданы простые пользователи")

    ##### Объект строительства  #####

    Construction = apps.get_model("building", "Construction")
    
    construction = Construction()
    construction.title = 'Установка опор с светодиодными панелями на улицах поселка Карагайлы'
    construction.details = 'Установка опор с светодиодными панелями на улицах поселка Карагайлы'
    construction.address = 'КАЗАХСТАН Карагандинская область, Каркаралинский район, Карагайлинская п.а., п.Карагайлы'
    construction.customer = 'ГУ "Аппарат акима поселка Карагайлы Каркаралинск"'
    construction.completion = '2018 г., сентябрь'
    construction.price = 11793600
    construction.save()
   
    construction = Construction()
    construction.title = 'Ремонт отопления и водопровода ФОК'
    construction.details = 'Ремонт отопления и водопровода ФОК'
    construction.address = 'КАЗАХСТАН Карагандинская область, Шетский район, п. Акжал'
    construction.customer = 'ТОО "Nova цинк"'
    construction.completion = '2015 г., декабрь'
    construction.price = 6378400
    construction.save()
   
    construction = Construction()
    construction.title = '«Наружные сети водоснабжения, канализации, электроснабжения, теплоснабжения к арендному дому в п. Жайрем, ул. Металлургов, 37/1».'
    construction.details = '«Наружные сети водоснабжения, канализации, электроснабжения, теплоснабжения к арендному дому в п. Жайрем, ул. Металлургов, 37/1».'
    construction.address = 'КАЗАХСТАН Карагандинская область, г. Каражал, ул. Сайдалы Сары Тока,1'
    construction.customer = 'ГУ «Отдел строительства, архитектуры и градостроительства города Каражал»'
    construction.completion = '2012 г., декабрь'
    construction.price = 2058000
    construction.save()
   
    construction = Construction()
    construction.title = 'Ремонт трубопроводов внутреннего водопровода производственных боксов Автотранспортного цеха ОФ»'
    construction.details = 'Ремонт трубопроводов внутреннего водопровода производственных боксов Автотранспортного цеха ОФ»'
    construction.address = 'КАЗАХСТАН Карагандинский областной филиал АО «Казпочта» г. Караганда, ул.Бытовая , 23'
    construction.customer = 'Карагандинский областной филиал АО «Казпочта»'
    construction.completion = '2014 г., декабрь'
    construction.price = 805000
    construction.save()
   
    construction = Construction()
    construction.title = 'Ремонт помещений складской логистики здания Автотранспортного цеха ОФ АО «Казпочта»'
    construction.details = 'Ремонт помещений складской логистики здания Автотранспортного цеха ОФ АО «Казпочта»'
    construction.address = 'КАЗАХСТАН Карагандинский областной филиал АО «Казпочта» г. Караганда, ул.Бытовая , 23'
    construction.customer = 'Карагандинский областной филиал АО «Казпочта»'
    construction.completion = '2014 г., сентябрь'
    construction.price = 8801665
    construction.save()
   
    construction = Construction()
    construction.title = 'Ремонтные работы по замене ограждения фасадной части здания Бухар-Жырауского РУПС'
    construction.details = 'Ремонтные работы по замене ограждения фасадной части здания Бухар-Жырауского РУПС'
    construction.address = 'КАЗАХСТАН Карагандинская область, Бухар-Жырауский р-н, п.Ботокара, ул.Казыбек би,77'
    construction.customer = 'Карагандинский областной филиал АО «Казпочта»'
    construction.completion = '2015 г., ноябрь'
    construction.price = 350650
    construction.save()
   
    construction = Construction()
    construction.title = '«Ремонт фасада здания ОВД г. Каражал»'
    construction.details = '«Ремонт фасада здания ОВД г. Каражал»'
    construction.address = 'КАЗАХСТАН Карагандинская область, г. Каражал, ул. Тоимбекова,8'
    construction.customer = 'ГУ «Отдел внутренних дел города Каражал Департамента внутренних дел Карагандинской области»'
    construction.completion = '2011 г., сентябрь'
    construction.price = 1200000
    construction.save() 

    construction = Construction()
    construction.title = 'Офисное здание улица Горького'
    construction.details = 'Офисное здание улица Горького'
    construction.address = 'ул. Горького, 20'
    construction.customer = 'ТОО Омега'
    construction.completion = '2023 г., сентябрь'
    construction.price = 80000000
    construction.save()
    
    construction = Construction()
    construction.title = 'Офисное здание улица Торайгырова'
    construction.details = 'Офисное здание улица Торайгырова'
    construction.address = 'ул. Торайгырова, 30'
    construction.customer = 'ТОО Алга'
    construction.completion = '2023 г., октябрь'
    construction.price = 95000000
    construction.save()
    
    construction = Construction()
    construction.title = '16-й этажный жилой дом улица Каирбаева'
    construction.details = '16-й этажный жилой дом улица Каирбаева'
    construction.address = 'ул. Каирбаева, 20'
    construction.customer = 'ТОО Жазира'
    construction.completion = '2023 г., ноябрь'
    construction.price = 95000000
    construction.save()

    print("Инвесторы OK")

    ##### Объект строительства  #####

    Investor = apps.get_model("building", "Investor")
    
    investor = Investor()
    investor.fio = 'Нажмиденов Аслан Жумартович'
    investor.email = 'aslan@mail.ru'
    investor.phone = '+7-701-111-1111'
    investor.link = 'https://ru-ru.facebook.com/'
    investor.photo = 'images/investor1.jpeg'
    investor.save()
    
    investor = Investor()
    investor.fio = 'Болатова Айзада Кайрболатовна'
    investor.email = 'aizada@mail.ru'
    investor.phone = '+7-701-111-2222'
    investor.link = 'https://ru-ru.facebook.com/'
    investor.photo = 'images/investor2.jpeg'
    investor.save()
    
    investor = Investor()
    investor.fio = 'Кумарбеков Жантуар Маратович'
    investor.email = 'zhantuar@mail.ru'
    investor.phone = '+7-701-111-3333'
    investor.link = 'https://ru-ru.facebook.com/'
    investor.photo = 'images/investor3.jpeg'
    investor.save()
    
    investor = Investor()
    investor.fio = 'Тілеулиева Мариам Қанатқызы'
    investor.email = 'mariam@mail.ru'
    investor.phone = '+7-701-111-4444'
    investor.link = 'https://ru-ru.facebook.com/'
    investor.photo = 'images/investor4.jpeg'
    investor.save()
    
    investor = Investor()
    investor.fio = 'Ануар Данияр Болатұлы'
    investor.email = 'daniyar@mail.ru'
    investor.phone = '+7-701-111-5555'
    investor.link = 'https://ru-ru.facebook.com/'
    investor.photo = 'images/investor5.jpeg'
    investor.save()
    
    investor = Investor()
    investor.fio = 'Кусаинова Сымбат Усенқызы'
    investor.email = 'symbat@mail.ru'
    investor.phone = '+7-701-111-6666'
    investor.link = 'https://ru-ru.facebook.com/'
    investor.photo = 'images/investor6.jpeg'
    investor.save()
    
    investor = Investor()
    investor.fio = 'Ерлан Бекасыл Ерланұлы'
    investor.email = 'bekasyl@mail.ru'
    investor.phone = '+7-701-111-7777'
    investor.link = 'https://ru-ru.facebook.com/'
    investor.photo = 'images/investor7.jpeg'
    investor.save()
    
    investor = Investor()
    investor.fio = 'Альмуханова Жанар Орынғалиқызы'
    investor.email = 'zhanar@mail.ru'
    investor.phone = '+7-701-111-8888'
    investor.link = 'https://ru-ru.facebook.com/'
    investor.photo = 'images/investor8.jpeg'
    investor.save()
    
    investor = Investor()
    investor.fio = 'Тұратаев Абзал Асқанбекұлы'
    investor.email = 'abzal@mail.ru'
    investor.phone = '+7-701-111-9999'
    investor.link = 'https://ru-ru.facebook.com/'
    investor.photo = 'images/investor9.jpeg'
    investor.save()
    
    investor = Investor()
    investor.fio = 'Серікбай Меруерт Омарқызы'
    investor.email = 'meruert@mail.ru'
    investor.phone = '+7-701-111-1010'
    investor.link = 'https://ru-ru.facebook.com/'
    investor.photo = 'images/investor10.jpeg'
    investor.save()
   
    print("Инвесторы OK")

    ##### Привязка объектов к инвесторам  #####

    Binding = apps.get_model("building", "Binding")
    
    binding = Binding()
    binding.construction_id = 1   
    binding.investor_id = 1   
    binding.save()
    
    binding = Binding()
    binding.construction_id = 2   
    binding.investor_id = 2   
    binding.save()
    
    binding = Binding()
    binding.construction_id = 3   
    binding.investor_id = 3   
    binding.save()
    
    binding = Binding()
    binding.construction_id = 4   
    binding.investor_id = 4   
    binding.save()
    
    binding = Binding()
    binding.construction_id = 5   
    binding.investor_id = 5   
    binding.save()
    
    binding = Binding()
    binding.construction_id = 6   
    binding.investor_id = 6  
    binding.save()
    
    binding = Binding()
    binding.construction_id = 7   
    binding.investor_id = 7  
    binding.save()
    
    binding = Binding()
    binding.construction_id = 8   
    binding.investor_id = 8   
    binding.save()
    
    binding = Binding()
    binding.construction_id = 9   
    binding.investor_id = 9   
    binding.save()
    
    binding = Binding()
    binding.construction_id = 10   
    binding.investor_id = 10   
    binding.save()

    print("Привязка объектов к инвесторам OK")

    ##### Инвестиции  #####

    Investments = apps.get_model("building", "Investments")
    
    investments = Investments()
    investments.datein = datetime.now() - timedelta(days=60)
    investments.construction_id = 1   
    investments.investor_id = 1   
    investments.amount = 20000000   
    investments.save()
    
    investments = Investments()
    investments.datein = datetime.now() - timedelta(days=55)
    investments.construction_id = 2   
    investments.investor_id = 2   
    investments.amount = 25000000   
    investments.save()
    
    investments = Investments()
    investments.datein = datetime.now() - timedelta(days=50)
    investments.construction_id = 3   
    investments.investor_id = 3   
    investments.amount = 15000000   
    investments.save()
    
    investments = Investments()
    investments.datein = datetime.now() - timedelta(days=45)
    investments.construction_id = 4   
    investments.investor_id = 4   
    investments.amount = 20000000   
    investments.save()
    
    investments = Investments()
    investments.datein = datetime.now() - timedelta(days=40)
    investments.construction_id = 5   
    investments.investor_id = 5   
    investments.amount = 25000000   
    investments.save()
    
    investments = Investments()
    investments.datein = datetime.now() - timedelta(days=35)
    investments.construction_id = 6   
    investments.investor_id = 6   
    investments.amount = 15000000   
    investments.save()
    
    investments = Investments()
    investments.datein = datetime.now() - timedelta(days=30)
    investments.construction_id = 7   
    investments.investor_id = 7   
    investments.amount = 20000000   
    investments.save()
    
    investments = Investments()
    investments.datein = datetime.now() - timedelta(days=25)
    investments.construction_id = 8   
    investments.investor_id = 8   
    investments.amount = 25000000   
    investments.save()
    
    investments = Investments()
    investments.datein = datetime.now() - timedelta(days=20)
    investments.construction_id = 9   
    investments.investor_id = 9   
    investments.amount = 15000000   
    investments.save()
    
    investments = Investments()
    investments.datein = datetime.now() - timedelta(days=15)
    investments.construction_id = 10   
    investments.investor_id = 10   
    investments.amount = 20000000   
    investments.save()

    print("Инвестиции OK")

    ###### Приходные накладные  #####

    Coming = apps.get_model("building", "Coming")
    
    coming = Coming()
    coming.organization = 'ИП Ашимова М.М.'
    coming.datec = datetime.now() - timedelta(days=45)
    coming.numb = 1
    coming.save()

    coming = Coming()
    coming.organization = 'ИП «Интегра» Сушкова М.'
    coming.datec = datetime.now() - timedelta(days=44)
    coming.numb = 2
    coming.save()

    coming = Coming()
    coming.organization = 'ТОО "МеталлоСклад-к "'
    coming.datec = datetime.now() - timedelta(days=43)
    coming.numb = 3
    coming.save()

    coming = Coming()
    coming.organization = 'ТОО "Кровельный Центр"'
    coming.datec = datetime.now() - timedelta(days=42)
    coming.numb = 4
    coming.save()

    coming = Coming()
    coming.organization = 'ТОО "Светотехника Плюс"'
    coming.datec = datetime.now() - timedelta(days=41)
    coming.numb = 5
    coming.save()
    
    coming = Coming()
    coming.organization = 'ТОО "СтройДекор 777"'
    coming.datec = datetime.now() - timedelta(days=40)
    coming.numb = 6
    coming.save()

    coming = Coming()
    coming.organization = 'ТОО "Энергия 17"'
    coming.datec = datetime.now() - timedelta(days=39)
    coming.numb = 7
    coming.save()

    coming = Coming()
    coming.organization = 'Филиал ТОО "ORBIS" в городе Караганда'
    coming.datec = datetime.now() - timedelta(days=38)
    coming.numb = 8
    coming.save()

    coming = Coming()
    coming.organization = 'ТОО "Юкас-МК"'
    coming.datec = datetime.now() - timedelta(days=37)
    coming.numb = 9
    coming.save()

    coming = Coming()
    coming.organization = ' ТОО "ТехноНИКОЛЬ - КАЗАХСТАН"'
    coming.datec = datetime.now() - timedelta(days=36)
    coming.numb = 10
    coming.save()

    print("Приходные накладные OK")

    ###### Категория товара #####

    Category = apps.get_model("building", "Category")

    category = Category()
    category.title='Кирпич'   
    category.save()
    
    category = Category()
    category.title='Кровельные материалы'   
    category.save()

    category = Category()
    category.title='Теплоизоляционные материалы'   
    category.save()

    category = Category()
    category.title='Фасадные материалы'   
    category.save()

    category = Category()
    category.title='Пиломатериалы'   
    category.save()

    category = Category()
    category.title='Гидроизоляционные материалы'   
    category.save()
    
    category = Category()
    category.title='Железобетонные изделия'   
    category.save()
    
    category = Category()
    category.title='Сухие строительные смеси'   
    category.save()
    
    category = Category()
    category.title='Сыпучие материалы'   
    category.save()
    
    category = Category()
    category.title='Звукоизоляционные материалы'   
    category.save()

    print("Категория товара OK")

    ###### Товар #####
    
    Catalog = apps.get_model("building", "Catalog")

    catalog = Catalog()
    catalog.coming_id = 1
    catalog.category_id = 1
    catalog.title='Керамический красный кирпич пустотелый М150, 400х200х140 мм'
    catalog.details='Керамический кирпич - строительный материал, который традиционно используется много лет и до сих пор остаётся востребованным. Такую популярность керамический кирпич приобрёл благодаря своей практичности и надёжности. Здания, возведённые с помощью этого материала, стоят сотни лет. Керамический кирпич изготавливают из глины с добавками. Благодаря глиняной основе строительный материал обладает ценными характеристиками: экологической безопасностью и прочностью.'
    catalog.price=325
    catalog.quantity=10000
    #catalog.photo='images/catalog01.jpg'
    catalog.unit='шт.'
    catalog.save()

    catalog = Catalog()
    catalog.coming_id = 1
    catalog.category_id = 1
    catalog.title='Кирпич строительный М100 250*120*65 мм'
    catalog.details='Кирпич М 100  Доставка по городу за город , форма оплаты любая , доставка в течений часа , полный пакет документов , 100% гарантия качества , бой при выгрузке не более 1% '
    catalog.price=30
    catalog.quantity=10000
    #catalog.photo='images/catalog02.jpg'
    catalog.unit='шт.'
    catalog.save()

    catalog = Catalog()
    catalog.coming_id = 2
    catalog.category_id = 2
    catalog.title='Конек кровельный'
    catalog.details='Длина: 2, 2.5, 1.25, 3. Вид: круглый, фигурный, плоский, металлочерепичный, простой, ребро, малый, острый. Материал: оцинкованная сталь, сталь, полимер, полиэстер'
    catalog.price=680
    catalog.quantity=100
    #catalog.photo='images/catalog03.jpg'
    catalog.unit='погонный метр'
    catalog.save()

    catalog = Catalog()
    catalog.coming_id = 2
    catalog.category_id = 2
    catalog.title='Модульная металлочерепица черепица BRABUS 3D'
    catalog.details='Главные преимущества металлочерепицы BRABUS 3D – это: привлекательный внешний вид, большая цветовая гамма; пожаробезопасный и экологически чистый материал; легкость при монтаже; металл за счет покрытия не подвержен коррозии'
    catalog.price=4860
    catalog.quantity=100
    #catalog.photo='images/catalog04.jpg'
    catalog.unit='шт.'
    catalog.save()

    catalog = Catalog()
    catalog.coming_id = 3
    catalog.category_id =3
    catalog.title='Вата огнеупорная МКРР-130'
    catalog.details='МКРР-130 ― Вата (муллито-кремнеземистое волокно) огнеупорная теплоизоляционная производится плавкой в электрической печи материала содержащего чистые оксиды алюминия и кремния с последующим образованием волокна методом раздува. Вата МКРР-130 - эффективный теплоизоляционный материал.'
    catalog.price=1300
    catalog.quantity=1000
    #catalog.photo='images/catalog05.jpg'
    catalog.unit='кг'
    catalog.save()

    catalog = Catalog()
    catalog.coming_id = 3
    catalog.category_id = 3
    catalog.title='Картон Асбестовый КАОН-1 ГОСТ 2850-95 толщина 5 мм'
    catalog.details='Картон Асбестовый КАОН-1 ГОСТ 2850-95 размер 1000*800*5 мм, предназначен для использования в качестве огнезащитного теплоизоляционного материала при температуре изолируемой поверхности не более 500°С. Изготавливается в листах. '
    catalog.price=520
    catalog.quantity=1000
    #catalog.photo='images/catalog06.jpg'
    catalog.unit='шт.'
    catalog.save()

    catalog = Catalog()
    catalog.coming_id = 4
    catalog.category_id = 4
    catalog.title='Фибро-цементная плита 1570*1200*8,0мм текстурная (кирпич)'
    catalog.details='Фиброцементные плиты представляют собой прямоугольные листы с гладкоокрашенной или фактурной лицевой поверхностью. Торцы плиты окрашены в цвет. На внутреннюю сторону плиты (не лицевую) наносится специальный слой грунтовки. Основой плиты является прессованный лист фиброцемента, автоклавированный.'
    catalog.price=10000
    catalog.quantity=100
    #catalog.photo='images/catalog07.jpg'
    catalog.unit='кв.м'
    catalog.save()

    catalog = Catalog()
    catalog.coming_id = 4
    catalog.category_id = 4
    catalog.title='Искусственный камень'
    catalog.details=' Фасадные панели Идеал ТОО «Идеал Систем» используя передовые технологии европейских стран и свои собственные разработки в области производства строительных материалов наладило производство фасадных панелей «ИДЕАЛ» на основе полимерного фибробетона. '
    catalog.price=2550
    catalog.quantity=100
    #catalog.photo='images/catalog08.jpg'
    catalog.unit='кв.м'
    catalog.save()

    catalog = Catalog()
    catalog.coming_id = 5
    catalog.category_id = 5
    catalog.title='Фанера Береза 4 мм 1,52*1,52 мм сорт 4/4'
    catalog.details='Фанера Береза 4 мм 1,52*1,52 мм сорт 4/4'
    catalog.price=4000
    catalog.quantity=100
    #catalog.photo='images/catalog09.jpg'
    catalog.unit='лист'
    catalog.save()

    catalog = Catalog()
    catalog.coming_id = 5
    catalog.category_id = 5
    catalog.title='ДСП (древесно-стружечная плита)'
    catalog.details='Размер: 16. Раскрой: 2.44х1.83, 3.5х1.75.'
    catalog.price=4678
    catalog.quantity=100
    #catalog.photo='images/catalog10.jpg'
    catalog.unit='лист'
    catalog.save()

    catalog = Catalog()
    catalog.coming_id = 6
    catalog.category_id = 6
    catalog.title='Геомембрана 1мм HDPE/LDPE'
    catalog.details='Геомембрана 1мм HDPE/LDPE'
    catalog.price=1250
    catalog.quantity=100
    #catalog.photo='images/catalog11.jpg'
    catalog.unit='кв.м'
    catalog.save()

    catalog = Catalog()
    catalog.coming_id = 6
    catalog.category_id = 6
    catalog.title='Гидроизоляция Унифлекс ЭПП'
    catalog.details='Гидроизоляция Унифлекс ЭПП'
    catalog.price=1590
    catalog.quantity=100
    #catalog.photo='images/catalog12.jpg'
    catalog.unit='кв.м'
    catalog.save()

    catalog = Catalog()
    catalog.coming_id = 7
    catalog.category_id = 7
    catalog.title='Плита ПК 72.15-8'
    catalog.details='Железобетонные плиты перекрытия широко используются для формирования несущей конструкции зданий, поэтому от их качества во многом зависит долговечность и прочность сооружения. Поскольку несущая конструкция должна выдерживать серьезную нагрузку, элементы перекрытия изготавливаются только из высококачественного бетона.'
    catalog.price=170000
    catalog.quantity=100
    #catalog.photo='images/catalog13.jpg'
    catalog.unit='шт.'
    catalog.save()

    catalog = Catalog()
    catalog.coming_id = 7
    catalog.category_id = 7
    catalog.title='Плита ПК 30.15-8'
    catalog.details='Железобетонные плиты перекрытия широко используются для формирования несущей конструкции зданий, поэтому от их качества во многом зависит долговечность и прочность сооружения. Поскольку несущая конструкция должна выдерживать серьезную нагрузку, элементы перекрытия изготавливаются только из высококачественного бетона.'
    catalog.price=68095
    catalog.quantity=100
    #catalog.photo='images/catalog14.jpg'
    catalog.unit='шт.'
    catalog.save()

    catalog = Catalog()
    catalog.coming_id = 8
    catalog.category_id = 8
    catalog.title='Цемент Д-20, ПЦ400, II/А-3 32.5Б'
    catalog.details='Маркировка: д-20, ПЦ400, II/А-3 32.5Б., мешок 50 кг'
    catalog.price=1673
    catalog.quantity=100
    #catalog.photo='images/catalog15.jpg'
    catalog.unit='мешок'
    catalog.save()

    catalog = Catalog()
    catalog.coming_id = 8
    catalog.category_id = 8
    catalog.title='Противоморозная добавка в бетон Криопласт -15'
    catalog.details='Противоморозная добавка в бетон, применяется в зимнее время.'
    catalog.price=175
    catalog.quantity=100
    #catalog.photo='images/catalog16.jpg'
    catalog.unit='кг'
    catalog.save()

    catalog = Catalog()
    catalog.coming_id = 9
    catalog.category_id = 9
    catalog.title='Щебень (гранитный, известняковый)'
    catalog.details='Щебень маркировки: 4-8, 5-10, 10-15, 10-20, 11.2-16, 16-22.4, 16-31.5, 20-40, 22.4-31.5, 25-60, 31.5-45, 31.5-63, 4-16, 4-5.6, 40-70, 40-80, 5-20, 5.6-8, 60-150, 70-250, 8-11.2, 8-16'
    catalog.price=520
    catalog.quantity=100
    #catalog.photo='images/catalog17.jpg'
    catalog.unit='куб.м'
    catalog.save()

    catalog = Catalog()
    catalog.coming_id = 9
    catalog.category_id = 9
    catalog.title='Глина бентонитовая модифицированная ECOS ( измельченная до 5 мкм) К'
    catalog.details='В добывающей промышленности широко применяется бентонитовый глинопорошок. На основе этого продукта изготавливаются растворы для бурения. Свои уникальные свойства раствор получает благодаря тому, что активированной кальцинированной'
    catalog.price=80
    catalog.quantity=100
    #catalog.photo='images/catalog18.jpg'
    catalog.unit='кг'
    catalog.save()

    catalog = Catalog()
    catalog.coming_id = 10
    catalog.category_id = 10
    catalog.title='Акустический поролон 1х2м'
    catalog.details='Акустический поролон применяется для корректировки акустических характеристик помещений. Снижает интенсивность и предотвращает многократное отражение звука от поверхностей. Улучшает звукоизоляцию и снижает эффект эха и искажения звука. Эффективен в качестве ВЧ и СЧ настенных ловушек и угловых басовых ловушек. Высота волны 20 мм., общая толщина листа 30 мм., размер листа 1х2м.'
    catalog.price=10000
    catalog.quantity=100
    #catalog.photo='images/catalog19.jpg'
    catalog.unit='лист'
    catalog.save()

    catalog = Catalog()
    catalog.coming_id = 10
    catalog.category_id = 10
    catalog.title='Плиты и маты Тилит® ТП'
    catalog.details='Плиты и маты ТИЛИТ® ТП — состоят из плотного пенополистирола, алюминиевой фольги и защитной полимерной пленки со специальной разметкой.'
    catalog.price=2097
    catalog.quantity=100
    #catalog.photo='images/catalog20.jpg'
    catalog.unit='шт.'
    catalog.save()
    
    print("Товар OK")

    ###### Расходные накладные #####

    Outgo = apps.get_model("building", "Outgo")
    
    outgo = Outgo()
    outgo.construction_id = 1
    outgo.dateo = datetime.now() - timedelta(days=10)
    outgo.numb = 1
    outgo.save()
    
    outgo = Outgo()
    outgo.construction_id = 2
    outgo.dateo = datetime.now() - timedelta(days=9)
    outgo.numb = 2
    outgo.save()
    
    outgo = Outgo()
    outgo.construction_id = 3
    outgo.dateo = datetime.now() - timedelta(days=8)
    outgo.numb = 3
    outgo.save()
    
    outgo = Outgo()
    outgo.construction_id = 4
    outgo.dateo = datetime.now() - timedelta(days=7)
    outgo.numb = 4
    outgo.save()
    
    outgo = Outgo()
    outgo.construction_id = 5
    outgo.dateo = datetime.now() - timedelta(days=6)
    outgo.numb = 5
    outgo.save()
    
    outgo = Outgo()
    outgo.construction_id = 6
    outgo.dateo = datetime.now() - timedelta(days=5)
    outgo.numb = 6
    outgo.save()
    
    outgo = Outgo()
    outgo.construction_id = 7
    outgo.dateo = datetime.now() - timedelta(days=4)
    outgo.numb = 7
    outgo.save()
    
    outgo = Outgo()
    outgo.construction_id = 8
    outgo.dateo = datetime.now() - timedelta(days=3)
    outgo.numb = 8
    outgo.save()
    
    outgo = Outgo()
    outgo.construction_id = 9
    outgo.dateo = datetime.now() - timedelta(days=2)
    outgo.numb = 9
    outgo.save()
    
    outgo = Outgo()
    outgo.construction_id = 10
    outgo.dateo = datetime.now() - timedelta(days=1)
    outgo.numb = 10
    outgo.save()

    print("Расходные накладные OK")

    ###### Продажа #####
    
    Sale = apps.get_model("building", "Sale")
    
    sale = Sale()
    sale.outgo_id = 1
    sale.catalog_id = 1
    sale.quantity = 50
    sale.save()
    
    sale = Sale()
    sale.outgo_id = 1
    sale.catalog_id = 2
    sale.quantity = 50
    sale.save()
    
    sale = Sale()
    sale.outgo_id = 2
    sale.catalog_id = 3
    sale.quantity = 50
    sale.save()
    
    sale = Sale()
    sale.outgo_id = 2
    sale.catalog_id = 4
    sale.quantity = 50
    sale.save()
    
    sale = Sale()
    sale.outgo_id = 3
    sale.catalog_id = 5
    sale.quantity = 50
    sale.save()
    
    sale = Sale()
    sale.outgo_id = 3
    sale.catalog_id = 6
    sale.quantity = 50
    sale.save()
    
    sale = Sale()
    sale.outgo_id = 4
    sale.catalog_id = 7
    sale.quantity = 50
    sale.save()
    
    sale = Sale()
    sale.outgo_id = 4
    sale.catalog_id = 8
    sale.quantity = 50
    sale.save()
    
    sale = Sale()
    sale.outgo_id = 5
    sale.catalog_id = 9
    sale.quantity = 50
    sale.save()
    
    sale = Sale()
    sale.outgo_id = 5
    sale.catalog_id = 10
    sale.quantity = 50
    sale.save()
    
    sale = Sale()
    sale.outgo_id = 6
    sale.catalog_id = 11
    sale.quantity = 50
    sale.save()
    
    sale = Sale()
    sale.outgo_id = 6
    sale.catalog_id = 12
    sale.quantity = 50
    sale.save()
    
    sale = Sale()
    sale.outgo_id = 7
    sale.catalog_id = 13
    sale.quantity = 50
    sale.save()
    
    sale = Sale()
    sale.outgo_id = 7
    sale.catalog_id = 14
    sale.quantity = 50
    sale.save()
    
    sale = Sale()
    sale.outgo_id = 8
    sale.catalog_id = 15
    sale.quantity = 50
    sale.save()
    
    sale = Sale()
    sale.outgo_id = 8
    sale.catalog_id = 16
    sale.quantity = 50
    sale.save()
    
    sale = Sale()
    sale.outgo_id = 9
    sale.catalog_id = 17
    sale.quantity = 50
    sale.save()
    
    sale = Sale()
    sale.outgo_id = 9
    sale.catalog_id = 18
    sale.quantity = 50
    sale.save()
    
    sale = Sale()
    sale.outgo_id = 10
    sale.catalog_id = 19
    sale.quantity = 50
    sale.save()
    
    sale = Sale()
    sale.outgo_id = 10
    sale.catalog_id = 20
    sale.quantity = 50
    sale.save()
    
    print("Продажа OK")

    ##### Новости #####
    News = apps.get_model("building", "News")

    news = News()
    news.daten = datetime.now() - timedelta(days=45)
    news.title = 'Cейсмоустойчив ли мой дом? Какие здания Алматы проверяли на подземные толчки?'
    news.details = """Специалист АО "КазНИИСА" рассказала, какие здания в Алматы проходили реальные тесты на устойчивость при землетрясениях и какие типы домов можно назвать наиболее надежными, передает корреспондент Tengrinews.kz.
    По словам управляющего директора по производству АО "КазНИИСА" Ералы Шокбарова, в Алматы основная часть жилых домов делится на несколько типов и была построена еще в советское время, когда здания возводились по типовым сериям. Их испытывали на нагрузки институты, которые разрабатывали эти типы, и после натурных испытаний выводили их в массовое строительство. На сегодня типичными примерами таких зданий являются 308-я серия (трех- и четырехэтажные кирпичные дома 1939-1981 годов постройки) и 275-я серия (кирпичные дома 1951-1956 годов постройки). Далее идут серии крупнопанельных домов серий КЗ-464 (панельные "хрущевки", строившиеся с 1961 года), 69-я и известная "алматинская" серия домов 1-158 (девятиэтажки, строившиеся с 70-х годов). Также в Алматы имеются каркасные дома типовых серий ВП и ВТ, пятиэтажные дома ЖКУ, изготовлявшиеся из сборных каркасов и монтируемые прямо на площадке.
    "Из этих серий самыми надежными домами являются каркасно-панельные и крупнопанельные здания. Они проходили испытания, включая натурные. К ним относятся каркасно-панельные дома ЖКУ, крупнопанельные здания серий Кз и Кзу-464, а также девятиэтажные дома 158-й серии. В 2017 году наш институт проводил паспортизацию застройки в сейсмически активной зоне Алматы. В ходе этого процесса описывались конструктивные решения зданий, объемно-планировочные решения, текущее физическое состояние и конструктивные уязвимости. Всего в перечень вошло более 10 тысяч зданий, включая не только жилые дома, но и социальные объекты, такие как административные здания, школы и поликлиники. В итоге было выяснено, что 30-35 процентов из них не являются сейсмостойкими. По ним были даны рекомендации по сейсмоусилению или замене на новые", - рассказал представитель "КазНИИСА"."""
    news.photo = 'images/news1.jpeg' 
    news.save()

    news = News()
    news.daten = datetime.now() - timedelta(days=40)
    news.title = 'Объявлен тендер на строительство ТЭЦ в Кокшетау'
    news.details = """Министерство энергетики РК в соответствии со статьей 15-6 Закона РК "Об электроэнергетике" проводит тендер на строительство генерирующих установок, вновь вводимых в эксплуатацию, по проекту "Строительство ТЭЦ в городе Кокшетау", передает Tengrinews.kz со ссылкой на пресс-службу Министерства энергетики.
    Планируемая к постройке новая электростанция должна будет вырабатывать электрическую и тепловую энергию в режиме когенерации. Согласно разработанному технико-экономическому обоснованию, к новой электростанции предъявляются следующие технические требования: электрическая мощность должна составлять не менее 240 МВт, а тепловая мощность – не менее 520 Гкал/час.
    Строительство ТЭЦ предусмотрено с разбивкой на две очереди. Для ознакомления с более подробной информацией по техническим характеристикам, указанным в ТЭО, необходимо пройти по ссылке.
    Тендер будет проведен согласно Закону РК "Об электроэнергетике" и Правил проведения тендера на строительство генерирующих установок, вновь вводимых в эксплуатацию."""
    news.photo = 'images/news2.jpeg' 
    news.save()

    news = News()
    news.daten = datetime.now() - timedelta(days=35)
    news.title = 'Сговор при госзакупках по строительству дорог выявили в Казахстане'
    news.details = """Агентство по защите и развитию конкуренции выявило сговор на госзакупках по строительству автомобильных дорог, передает Tengrinews.kz со ссылкой на пресс-службу агентства. 
    "Департаментом агентства по городу Нур-Султану завершено расследование по факту картельного сговора между ТОО "АБК-Автодор НС" и ТОО "Казахдорстрой" в части поддержания цен на конкурсах по закупу услуг строительства и ремонта автомобильных дорог. Общая сумма тендеров составила 14,6 миллиарда тенге.
    Установлено, что ТОО "АБК-Автодор НС" и ТОО "Казахдорстрой" принимали участие в государственных закупках, один из которых создавал другому мнимую конкуренцию для признания закупок состоявшимися по максимально возможной цене", - говорится в сообщении.
    Как заявили в ведомстве, схема работала следующим образом: "АБК-Автодор НС" и "Казахдорстрой" выступали единственными конкурентами друг другу, предлагая цену равную стартовой либо с минимальным снижением без проявления конкурентной борьбы.
    "Действия субъектов не только нарушают положения антимонопольного законодательства, но и исключают экономию бюджетных средств. Данные правонарушения выявлены антимонопольным органом по итогам мониторинга портала государственных закупок. В настоящее время объектами расследования результат расследования обжалуется в суде", - добавили в агентстве."""
    news.photo = 'images/news3.jpeg' 
    news.save()

    news = News()
    news.daten = datetime.now() - timedelta(days=30)
    news.title = 'Государственные закупки: новые критерии при расчете условных скидок'
    news.details = """В правила осуществления государственных закупок были внесены дополнения. Подробнее читайте в статье.
    Был добавлен новый критерий, влияющий на ценовое предложение — нахождение потенциального поставщика в соответствующей административно-территориальной единице в границах области, городов республиканского значения и столицы по месту выполнения работ. 
    Такому потенциальному поставщику присваивается условная скидка в размере 1%.  Критерий применяется при госзакупках (приложение 11-4 к Правилам): 
    строительно-монтажных работ
    работ, не связанных со строительством. Исключение:работы по разработке технико-экономического обоснования, проектно-сметной (типовой проектно-сметной) документации и градостроительных проектов, а также работ по комплексной вневедомственной экспертизе проектов строительства объектов
    Важно! Сумма закупки должна быть не более 400 000 МРП. 
    Критерий в виде нахождения потенциального поставщика в соответствующей административно-территориальной единице по месту выполнения работ определяется веб-порталом автоматически. 
    Еще один новый критерий — отрицательные значения.
    У потенциального поставщика, который имеет на исполнении договор, заключенный в текущем финансовом году, за каждый такой договор отнимается 0,1% от общей суммы условной скидки. Критерий применяется при госзакупках (приложение 11-5 к Правилам):
    строительно-монтажных работ
    работ по разработке технико-экономического обоснования, проектно-сметной (типовой проектно-сметной) документации и градостроительных проектов
    работ по комплексной вневедомственной экспертизе проектов строительства объектов
    инжиниринговых услуг в сфере архитектурной, градостроительной и строительной деятельности (технический надзор, управление проектом)"""
    news.photo = 'images/news4.jpeg' 
    news.save()

    news = News()
    news.daten = datetime.now() - timedelta(days=25)
    news.title = 'Токаев о закупках: Кулуарные решения должны уйти в прошлое'
    news.details = """Президент Казахстана Касым-Жомарт Токаев заявил, что кулуарные решения при проведении закупок должны уйти в прошлое, передает Tengrinews.kz со ссылкой на сайт Акорды. 
    Токаев отметил, что в стране важно обеспечить максимальную прозрачность всех стадий закупочного процесса.
    "Недоступность информации о планах и условиях закупок, принятие кулуарных решений - все это должно уйти в прошлое. Я констатирую, что позитивные тенденции в этом важном вопросе начались. Цифровизация данной сферы позволит быстрее выявлять и отсеивать "нелогичные" решения, не допускать завышения цен, закупать более качественные товары и услуги.
    Требуется разработать прозрачный механизм разрешения споров, возникающих в случае несогласия участников тендеров с решениями конкурсных комиссий. Эти и другие аспекты должны быть закреплены в законе "О закупках квазигосударственного сектора". Законопроект внесен в Парламент. Прошу депутатов внимательно его рассмотреть и принять в рамках текущей сессии", - отметил Президент, выступая в рамках форума поддержки отечественных предпринимателей Samruk Business Forum.
    Кроме того, Касым-Жомарт Токаев высказался о случаях, когда импортные продукты в Казахстане выдают за отечественные. Он отметил, что эта ситуация создает угрозу для казахстанского бизнеса и тормозит его развитие."""
    news.photo = 'images/news5.jpeg' 
    news.save()

    news = News()
    news.daten = datetime.now() - timedelta(days=20)
    news.title = 'Критику Токаева о хаотичной застройке прокомментировали в акимате Астаны'
    news.details = """Как планируют решить проблему c хаотичными застройками в Астане, рассказали в акимате, передает корреспондент Tengrinews.kz.
    В акимате Астаны сообщили, что согласно дизайн-коду при согласовании эскизных проектов и во избежание хаотичного размещения реклам на первых этажах жилых многоквартирных и общественных зданий проверяются предусмотренные рекламные поля на фасадах, также учитываются применяемые материалы отделки и цветовая палитра объектов.
    "Доступ для входных групп на первых этажах предусматривается с нулевой отметки без ступеней и организации пандусов, что обеспечивает беспрепятственный доступ для маломобильных групп. При реконструкции существующих объектов с организацией входных групп учитывается единое цветовое решение, применение материалов отделки и пандусы для доступа маломобильных групп населения в соответствии с действующими нормами", - сообщили в акимате."""
    news.photo = 'images/news6.jpeg' 
    news.save()

    news = News()
    news.daten = datetime.now() - timedelta(days=15)
    news.title = 'Закупки из одного источника: обоснование цены'
    news.details = """Закупки способом из одного источника подразумевают приобретение товаров, работ и услуг заказчиком напрямую у определенного потенциального поставщика — ему направляют приглашение на участие, а сама закупка проводится в соответствии с правилами тендерной площадки. 
*За отказ в участии в таких закупках потенциальный поставщик не попадает в реестр недобросовестных участников. 
При закупках данным способом поставщик должен предоставить обоснование цены на предлагаемые ТРУ.
Для чего это необходимо? Предоставляя обоснование цены поставщик объясняет стоимость поставляемых товаров/оказываемых услуг/выполняемых работ. В Законе “О государственных закупках” нет определенного формата предоставления данного документа. В законодательстве лишь указано, что он должен содержать сведения о итоговой цене на закупаемые ТРУ. 
Что может быть указано в обосновании цены? Например:
Себестоимость
Транспортировка
Страхование по импорту
Импортная пошлина
Расходные материалы
Банковские расходы
Заработная плата персонала
А также, множество других расходов. 
Поскольку у обоснования цены свободный формат представления, некоторые поставщики расписывают его кратко, другие более детально."""
    news.photo = 'images/news7.jpeg' 
    news.save()

    print("Новости Ok")

class Migration(migrations.Migration):

    dependencies = [
        ('building', '0001_initial'),
    ]

    operations = [
        migrations.RunPython(initialization),
        migrations.RunSQL("""CREATE VIEW view_catalog AS
SELECT catalog.id, catalog.category_id, category.title AS category, catalog.title,catalog.details, catalog.price, catalog.quantity, catalog.unit, 
(SELECT SUM(quantity) FROM sale WHERE sale.catalog_id = catalog.id) AS sale_quantity,
CASE 
WHEN (catalog.quantity - (SELECT SUM(quantity) FROM sale WHERE sale.catalog_id = catalog.id)) IS NULL 
THEN catalog.quantity 
ELSE (catalog.quantity - (SELECT SUM(quantity) FROM sale WHERE sale.catalog_id = catalog.id)) 
END
AS available
FROM catalog LEFT JOIN category ON catalog.category_id = category.id
WHERE catalog.quantity > 0
ORDER BY catalog.title,  catalog.title"""),
        #migrations.RunSQL("""CREATE VIEW view_sale AS
        #                SELECT sale.id, username, saleday, catalog_id, view_catalog.category, view_catalog.title, info, code, sale.price, sale.quantity, sale.price*sale.quantity AS total, user_id, rating, sale.details,
        #                (SELECT strftime('%d.%m.%Y',deliveryday) || ' - ' || movement FROM delivery WHERE sale_id = sale.id AND deliveryday = (SELECT MAX(deliveryday) AS Expr1 FROM delivery AS S WHERE  (sale_id = sale.id) )) AS final
        #                FROM sale LEFT JOIN view_catalog ON sale.catalog_id = view_catalog.id
        #                LEFT JOIN auth_user ON sale.user_id = auth_user.id"""),
    ]

